{
    "position": {
        "line": 5,
        "character": 16
    },
    "source": "resource/source/actionInvocationSuggestion1.bal",
    "items": [
        {
          "label": "respond((http:Response|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]) message)((()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError))",
            "kind": "Function",
            "detail": "Function",
            "documentation": {
                "right": {
                    "kind": "markdown",
                  "value": "**Package:** _ballerina/http_  \n  \nSends the outbound response to the caller.\n  \n**Params**  \n- `(http:Response|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[])` message: The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`,\n            `io:ReadableByteChannel` or `mime:Entity[]`(Defaultable)  \n  \n**Returns** `(()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError)`   \n- Returns an `http:ListenerError` if failed to respond  \n  \n"
                }
            },
            "sortText": "120",
            "insertText": "respond(${1})",
            "insertTextFormat": "Snippet",
            "command": {
                "title": "editor.action.triggerParameterHints",
                "command": "editor.action.triggerParameterHints"
            }
        },
        {
          "label": "promise(http:PushPromise promise)((()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError))",
            "kind": "Function",
            "detail": "Function",
            "documentation": {
                "right": {
                    "kind": "markdown",
                  "value": "**Package:** _ballerina/http_  \n  \nPushes a promise to the caller.\n  \n**Params**  \n- `http:PushPromise` promise: Push promise message  \n  \n**Returns** `(()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError)`   \n- An `http:ListenerError` in case of failures  \n  \n"
                }
            },
            "sortText": "120",
            "insertText": "promise(${1})",
            "insertTextFormat": "Snippet",
            "command": {
                "title": "editor.action.triggerParameterHints",
                "command": "editor.action.triggerParameterHints"
            }
        },
        {
          "label": "pushPromisedResponse(http:PushPromise promise, http:Response response)((()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError))",
            "kind": "Function",
            "detail": "Function",
            "documentation": {
                "right": {
                    "kind": "markdown",
                  "value": "**Package:** _ballerina/http_  \n  \nSends a promised push response to the caller.\n  \n**Params**  \n- `http:PushPromise` promise: Push promise message  \n- `http:Response` response: The outbound response  \n  \n**Returns** `(()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError)`   \n- An `http:ListenerError` in case of failures while responding with the promised response  \n  \n"
                }
            },
            "sortText": "120",
            "insertText": "pushPromisedResponse(${1})",
            "insertTextFormat": "Snippet",
            "command": {
                "title": "editor.action.triggerParameterHints",
                "command": "editor.action.triggerParameterHints"
            }
        },
        {
          "label": "acceptWebSocketUpgrade(map\u003cstring\u003e headers)((http:WebSocketCaller|http:WsConnectionClosureError|http:WsInvalidHandshakeError|http:WsPayloadTooBigError|http:WsProtocolError|http:WsConnectionError|http:WsInvalidContinuationFrameError|http:WsGenericError))",
            "kind": "Function",
            "detail": "Function",
            "documentation": {
                "right": {
                    "kind": "markdown",
                  "value": "**Package:** _ballerina/http_  \n  \nSends an upgrade request with custom headers.\n  \n**Params**  \n- `map\u003cstring\u003e` headers: A `map` of custom headers for handshake  \n  \n**Returns** `(http:WebSocketCaller|http:WsConnectionClosureError|http:WsInvalidHandshakeError|http:WsPayloadTooBigError|http:WsProtocolError|http:WsConnectionError|http:WsInvalidContinuationFrameError|http:WsGenericError)`   \n- `WebSocketCaller` or error on failure to upgrade  \n  \n"
                }
            },
            "sortText": "120",
            "insertText": "acceptWebSocketUpgrade(${1})",
            "insertTextFormat": "Snippet",
            "command": {
                "title": "editor.action.triggerParameterHints",
                "command": "editor.action.triggerParameterHints"
            }
        },
        {
            "label": "cancelWebSocketUpgrade(int status, string reason)((()|http:WsConnectionClosureError|http:WsInvalidHandshakeError|http:WsPayloadTooBigError|http:WsProtocolError|http:WsConnectionError|http:WsInvalidContinuationFrameError|http:WsGenericError))",
            "kind": "Function",
            "detail": "Function",
            "documentation": {
                "right": {
                    "kind": "markdown",
                    "value": "**Package:** _ballerina/http_  \n  \nCancels the handshake.\n  \n**Params**  \n- `int` status: Error Status code for cancelling the upgrade and closing the connection.\n           This error status code need to be 4xx or 5xx else the default status code would be 400.  \n- `string` reason: Reason for cancelling the upgrade  \n  \n**Returns** `(()|http:WsConnectionClosureError|http:WsInvalidHandshakeError|http:WsPayloadTooBigError|http:WsProtocolError|http:WsConnectionError|http:WsInvalidContinuationFrameError|http:WsGenericError)`   \n- An `error` if an error occurs during cancelling the upgrade or nil  \n  \n"
                }
            },
            "sortText": "120",
            "insertText": "cancelWebSocketUpgrade(${1})",
            "insertTextFormat": "Snippet",
            "command": {
                "title": "editor.action.triggerParameterHints",
                "command": "editor.action.triggerParameterHints"
            }
        },
        {
          "label": "continue()((()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError))",
            "kind": "Function",
            "detail": "Function",
            "documentation": {
                "right": {
                    "kind": "markdown",
                  "value": "**Package:** _ballerina/http_  \n  \nSends a `100-continue` response to the caller.\n  \n  \n  \n**Returns** `(()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError)`   \n- Returns an `http:ListenerError` if failed to send the `100-continue` response  \n  \n"
                }
            },
            "sortText": "120",
            "insertText": "continue()",
            "insertTextFormat": "Snippet"
        },
        {
          "label": "redirect(http:Response response, (300|301|302|303|304|305|307|308) code, string[] locations)((()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError))",
            "kind": "Function",
            "detail": "Function",
            "documentation": {
                "right": {
                    "kind": "markdown",
                  "value": "**Package:** _ballerina/http_  \n  \nSends a redirect response to the user with the specified redirection status code.\n  \n**Params**  \n- `http:Response` response: Response to be sent to the caller  \n- `(300|301|302|303|304|305|307|308)` code: The redirect status code to be sent  \n- `string[]` locations: An array of URLs to which the caller can redirect to  \n  \n**Returns** `(()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError)`   \n- Returns an `http:ListenerError` if failed to send the redirect response  \n  \n"
                }
            },
            "sortText": "120",
            "insertText": "redirect(${1})",
            "insertTextFormat": "Snippet",
            "command": {
                "title": "editor.action.triggerParameterHints",
                "command": "editor.action.triggerParameterHints"
            }
        },
        {
          "label": "ok((http:Response|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]) message)((()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError))",
            "kind": "Function",
            "detail": "Function",
            "documentation": {
                "right": {
                    "kind": "markdown",
                  "value": "**Package:** _ballerina/http_  \n  \nSends the outbound response to the caller with the status 200 OK.\n  \n**Params**  \n- `(http:Response|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[])` message: The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n            or `mime:Entity[]`(Defaultable)  \n  \n**Returns** `(()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError)`   \n- Returns an `http:ListenerError` if failed to respond  \n  \n"
                }
            },
            "sortText": "120",
            "insertText": "ok(${1})",
            "insertTextFormat": "Snippet",
            "command": {
                "title": "editor.action.triggerParameterHints",
                "command": "editor.action.triggerParameterHints"
            }
        },
        {
          "label": "created(string uri, (http:Response|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]) message)((()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError))",
            "kind": "Function",
            "detail": "Function",
            "documentation": {
                "right": {
                    "kind": "markdown",
                  "value": "**Package:** _ballerina/http_  \n  \nSends the outbound response to the caller with the status 201 Created.\n  \n**Params**  \n- `string` uri: Represents the most specific URI for the newly created resource  \n- `(http:Response|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[])` message: The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n            or `mime:Entity[]`. This message is optional.(Defaultable)  \n  \n**Returns** `(()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError)`   \n- Returns an `http:ListenerError` if failed to respond  \n  \n"
                }
            },
            "sortText": "120",
            "insertText": "created(${1})",
            "insertTextFormat": "Snippet",
            "command": {
                "title": "editor.action.triggerParameterHints",
                "command": "editor.action.triggerParameterHints"
            }
        },
        {
          "label": "accepted((http:Response|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]) message)((()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError))",
            "kind": "Function",
            "detail": "Function",
            "documentation": {
                "right": {
                    "kind": "markdown",
                  "value": "**Package:** _ballerina/http_  \n  \nSends the outbound response to the caller with the status 202 Accepted.\n  \n**Params**  \n- `(http:Response|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[])` message: The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n            or `mime:Entity[]`. This message is optional.(Defaultable)  \n  \n**Returns** `(()|http:GenericListenerError|http:InitializingInboundRequestError|http:ReadingInboundRequestHeadersError|http:ReadingInboundRequestBodyError|http:InitializingOutboundResponseError|http:WritingOutboundResponseHeadersError|http:WritingOutboundResponseBodyError|http:Initiating100ContinueResponseError|http:Writing100ContinueResponseError|http:InvalidCookieError)`   \n- Returns an `http:ListenerError` if failed to respond  \n  \n"
                }
            },
            "sortText": "120",
            "insertText": "accepted(${1})",
            "insertTextFormat": "Snippet",
            "command": {
                "title": "editor.action.triggerParameterHints",
                "command": "editor.action.triggerParameterHints"
            }
        }
    ]
}
